apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.ObjectMeta.Name }}
  labels:
    app: {{ $.ObjectMeta.Name }}
    release: {{ $.ObjectMeta.Name }}
data:
  hbase-site.xml: |
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration>
      <property>
        <name>hbase.rootdir</name>
        <value>hdfs://hadoop-sample-namenode-0.hadoop-sample-namenode.system.svc.cluster.local:9000/user/hbase</value>
      </property>
      <property>
        <name>hbase.cluster.distributed</name>
        <value>true</value>
        <description>集群模式</description>
      </property>
      <property>
        <name>hbase.zookeeper.quorum</name>
        <value>zookeeper-headless.system.svc.cluster.local</value>
      </property>
      <property>
          <name>hbase.zookeeper.property.clientPort</name>
          <value>2181</value>
      </property>
      <property>
          <name>hbase.master.info.port</name>
          <value>60010</value>
          <description>WEB UI地址</description>
      </property>
      <property>
          <name>hbase.thrift.support.proxyuser</name>
          <value>true</value>
      </property>
      <property>
          <name>hbase.regionserver.thrift.http</name>
          <value>true</value>
      </property>
      <property>
          <name>zookeeper.session.timeout</name>
          <value>1200000</value>
      </property>
      <property>
          <name>hbase.regionserver.handler.count</name>
          <value>50</value>
      </property>
      <property>
        <name>hbase.unsafe.stream.capability.enforce</name>
        <value>false</value>
        <description>禁止检查流功能</description>
      </property>
    </configuration>
  regionservers: |
    {{- $count := $.Spec.RegionServerSpec.Replicas | int -}}
    {{- range $i, $e := until $count }}
    {{ $.ObjectMeta.Name }}-regionserver-{{ $i }}.{{ $.ObjectMeta.Name }}-regionserver.{{ $.ObjectMeta.Namespace }}.svc.cluster.local
    {{- end }}


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.ObjectMeta.Name }}-master
  labels:
    app: {{ $.ObjectMeta.Name }}-master
    release: {{ $.ObjectMeta.Name }}-master
    component: {{ $.ObjectMeta.Name }}-master
spec:
  serviceName: {{ $.ObjectMeta.Name }}-master
  replicas: {{ $.Spec.MasterSpec.Replicas }}
  selector:
    matchLabels:
      app: {{ $.ObjectMeta.Name }}-master
      release: {{ $.ObjectMeta.Name }}-master
      component: {{ $.ObjectMeta.Name }}-master
  template:
    metadata:
      labels:
        app: {{ $.ObjectMeta.Name }}-master
        release: {{ $.ObjectMeta.Name }}-master
        component: {{ $.ObjectMeta.Name }}-master
        sidecar.istio.io/inject: "false"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ $.ObjectMeta.Name }}-master
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 0
      containers:
        - name: {{ $.ObjectMeta.Name }}-master
          image: "{{ $.Spec.Image.Repository }}:{{ $.Spec.Image.Tag }}"
          imagePullPolicy: IfNotPresent
          args:
            - "--Master"
          volumeMounts:
            - name: hbase-config
              mountPath: /usr/local/hbase/conf/hbase-site.xml
              subPath: hbase-site.xml
            - name: hbase-config
              mountPath: /usr/local/hbase/conf/regionservers
              subPath: regionservers
#            - name: dfs
#              mountPath: /usr/local/hadoop/dn
      volumes:
        - name: hbase-config
          configMap:
            name: {{ $.ObjectMeta.Name }}
#        - name: dfs
#          hostPath:
#            # Ensure the file DirectoryOrCreate is created.
#            path: /home/data/dn
#            type: DirectoryOrCreate

---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ $.ObjectMeta.Name }}-master
  labels:
    app: {{ $.ObjectMeta.Name }}-master
    release: {{ $.ObjectMeta.Name }}-master
spec:
  selector:
    matchLabels:
      app: {{ $.ObjectMeta.Name }}-master
      release: {{ $.ObjectMeta.Name }}-master
#  minAvailable: 1
  maxUnavailable: 2

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.ObjectMeta.Name }}-master
  labels:
    app: {{ $.ObjectMeta.Name }}-master
    release: {{ $.ObjectMeta.Name }}-master
spec:
  type: NodePort
  ports:
    - name: ipc
      port: 60000
      protocol: TCP
    - name: web
      port: 60010
#  clusterIP: None
  selector:
    app: {{ $.ObjectMeta.Name }}-master
    release: {{ $.ObjectMeta.Name }}-master
    component: {{ $.ObjectMeta.Name }}-master

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.ObjectMeta.Name }}-regionserver
  labels:
    app: {{ $.ObjectMeta.Name }}-regionserver
    release: {{ $.ObjectMeta.Name }}-regionserver
spec:
  serviceName: {{ $.ObjectMeta.Name }}-regionserver
  replicas: {{ $.Spec.RegionServerSpec.Replicas }}
  selector:
    matchLabels:
      app: {{ $.ObjectMeta.Name }}-regionserver
      release: {{ $.ObjectMeta.Name }}-regionserver
  template:
    metadata:
      labels:
        app: {{ $.ObjectMeta.Name }}-regionserver
        release: {{ $.ObjectMeta.Name }}-regionserver
        sidecar.istio.io/inject: "false"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ $.ObjectMeta.Name }}-regionserver
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 0
      containers:
        - name: {{ $.ObjectMeta.Name }}-regionserver
          image: "{{ $.Spec.Image.Repository }}:{{ $.Spec.Image.Tag }}"
          imagePullPolicy: IfNotPresent
#          ports:
#            - containerPort: 9870
#              name: webhdfs
          args:
            - "--RegionServer"
          securityContext:
            privileged: true
#          env:
#            - name: HDFS_NAME_NODE_DIR
#              value: "/usr/local/hadoop/nn"
          volumeMounts:
            - name: hbase-config
              mountPath: /usr/local/hbase/conf/hbase-site.xml
              subPath: hbase-site.xml
            - name: hbase-config
              mountPath: /usr/local/hbase/conf/regionservers
              subPath: regionservers
#            - name: dfs
#              mountPath: /usr/local/hadoop/nn
      volumes:
        - name: hbase-config
          configMap:
            name: {{ $.ObjectMeta.Name }}
#        - name: dfs
#          hostPath:
#            # Ensure the file DirectoryOrCreate is created.
#            path: /home/data/nn
#            type: DirectoryOrCreate

---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ $.ObjectMeta.Name }}-regionserver
  labels:
    app: {{ $.ObjectMeta.Name }}-regionserver
    release: {{ $.ObjectMeta.Name }}-regionserver
spec:
  selector:
    matchLabels:
      app: {{ $.ObjectMeta.Name }}-regionserver
      release: {{ $.ObjectMeta.Name }}-regionserver
  minAvailable: 2


---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.ObjectMeta.Name }}-regionserver
  labels:
    app: {{ $.ObjectMeta.Name }}-regionserver
    release: {{ $.ObjectMeta.Name }}-regionserver
spec:
  type: NodePort
  ports:
    - name: ipc
      port: 60020
      protocol: TCP
    - name: web
      port: 60030
#  clusterIP: None
  selector:
    app: {{ $.ObjectMeta.Name }}-regionserver
    release: {{ $.ObjectMeta.Name }}-regionserver
